import{r as i,c as t,h as s,H as e,a as r}from"./p-8f2d27d2.js";import{G as o}from"./p-86931393.js";class a{constructor(i=null,t={}){if(this.apiKey=i,this.options=t,"undefined"==typeof window)throw new Error("google-maps is supported only in browser environment")}load(){return void 0!==this.api?Promise.resolve(this.api):void 0!==this.loader?this.loader:(window[a.CALLBACK_NAME]=()=>{if(this.api=window.google,void 0===this.resolve)throw new Error("Should not happen");this.resolve(this.api)},window.gm_authFailure=()=>{if(void 0===this.reject)throw new Error("Should not happen");this.reject(new Error("google-maps: authentication error"))},this.loader=new Promise(((i,t)=>{this.resolve=i,this.reject=t;const s=document.createElement("script");s.src=this.createUrl(),s.async=!0,s.onerror=i=>t(i),document.head.appendChild(s)})))}createUrl(){const i=[`callback=${a.CALLBACK_NAME}`];this.apiKey&&i.push(`key=${this.apiKey}`);for(let t in this.options)if(this.options.hasOwnProperty(t)){let s=this.options[t];"version"===t&&(t="v"),"libraries"===t&&(s=s.join(",")),i.push(`${t}=${s}`)}return`https://maps.googleapis.com/maps/api/js?${i.join("&")}`}}a.CALLBACK_NAME="_dk_google_maps_loader_cb";let n=class{constructor(s){i(this,s),this.fireenjinTrigger=t(this,"fireenjinTrigger",7),this.mapMarkers=[],this.optins={},this.visible=!0,this.markers=[],this.isVisible=!0}async addMarker(i){const t="string"==typeof i?JSON.parse(i):i,s=new this.google.maps.Marker({position:t.position,map:this.map,title:(null==t?void 0:t.name)||"",icon:(null==t?void 0:t.icon)?{url:t.icon,origin:new this.google.maps.Point(0,0),anchor:new this.google.maps.Point(15,15),scaledSize:new this.google.maps.Size(34,34),shape:{coords:[17,17,18],type:"circle"},optimized:!1}:null});return s.addListener("click",(()=>{this.onMarkerClick(s,t)})),this.mapMarkers.push(s),s}async updateMarkers(){return await this.clearMarkers(),this.markers.length>=1&&this.markers.map(this.addMarker.bind(this)),this.markers}async setMarkers(i=[]){return this.markers=i,await this.clearMarkers(),this.markers.length>=1&&this.markers.map(this.addMarker.bind(this)),this.markers}async setZoom(i){return this.map.setZoom(i)}async setCenter(i){return this.map.setCenter(i)}async clearMarkers(){var i;for(let t=0;t<this.mapMarkers.length;t++)(null===(i=this.mapMarkers[t])||void 0===i?void 0:i.setMap)&&this.mapMarkers[t].setMap(null);return this.mapMarkers=[],!0}onMarkerClick(i,t){this.map.setZoom(12),this.map.setCenter(i.getPosition()),this.fireenjinTrigger.emit({trigger:"markerClick",payload:{marker:i,location:t}})}getLocationCoords(i){try{o.getCurrentPosition().then((t=>{i&&"function"==typeof i&&i(t.coords)})).catch((async()=>{fetch("http://ip-api.com/json").then((async t=>{const s=await t.json();i({latitude:s.lat,longitude:s.lon})})),i&&"function"==typeof i&&i(!1)}))}catch(t){i(!1)}}createMap(i){this.map=new this.google.maps.Map(this.mapEl.querySelector("#map"),{zoom:9,center:{lat:i.latitude,lng:i.longitude}})}async loadGoogleMaps(i){const t=new a(this.apiKey,i||{});return this.google=await t.load(),this.google}componentDidLoad(){this.isVisible=this.visible,this.getLocationCoords((async i=>{var t;this.position=i||{latitude:38.6270025,longitude:-90.19940419999999},!(null===(t=null===window||void 0===window?void 0:window.google)||void 0===t?void 0:t.maps)&&this.apiKey&&await this.loadGoogleMaps(),this.createMap(this.position),await this.setMarkers(this.markers)}))}render(){return s(e,{class:{"map-is-visible":this.isVisible}},s("div",{id:"map"}))}get mapEl(){return r(this)}static get watchers(){return{markers:["updateMarkers"]}}};n.style="fireenjin-map{position:relative;display:block}fireenjin-map #map{display:block;height:0px;width:100%;margin:0 auto;opacity:0;transition:all ease 0.5s}fireenjin-map.map-is-visible #map{height:var(--map-height, 300px);opacity:1}";export{n as fireenjin_map}